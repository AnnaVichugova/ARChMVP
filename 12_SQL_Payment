-- Функция обработки изменения состояния оплаты и заказа
CREATE OR REPLACE FUNCTION ishop.update_order_status_on_pay()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
    -- Проверяем, что новое значение статуса равно 2 (ожидание подтверждения)
    IF NEW.status = 2 THEN
        -- Обновляем статус в таблице ishop.orders
        UPDATE ishop.orders
        SET status = 5 -- (в оплате)
        WHERE id = NEW.order_id;
    END IF;
    RETURN NEW;
END;
$function$

-- триггер, который будет вызывать эту функцию при изменении данных в payment:
CREATE OR REPLACE TRIGGER update_order_status_on_pay
AFTER INSERT ON payment
FOR EACH ROW
EXECUTE FUNCTION ishop.update_order_status_on_pay();


-- Функция обработки изменения состояния оплаты и заказа
CREATE OR REPLACE FUNCTION ishop.update_order_status_by_payment()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
    -- Проверяем условия: статус = 1 и сумма платежа соответствует
    IF NEW.status = 1 AND NEW.ammount = (SELECT ammount FROM ishop.orders WHERE id = NEW.order_id) THEN
        -- Обновляем статус в таблице orders
        UPDATE ishop.orders
        SET status = 6 -- (успешно оплачен)
        WHERE id = NEW.order_id;
    END IF;
    RETURN NEW;
END;
$function$

-- триггер, который будет вызывать эту функцию при изменении данных в payment:
CREATE OR REPLACE TRIGGER update_order_status_trigger_by_payment
AFTER UPDATE ON payment
FOR EACH ROW
EXECUTE FUNCTION ishop.update_order_status_by_payment();
