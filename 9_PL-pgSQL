-- Функция обработки заявок на заказ и вставки данных в соответствующие таблицы базы данных
CREATE OR REPLACE FUNCTION ishop.process_application()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
    customer_id INTEGER;
    order_id INTEGER; -- Объявляем переменную order_id
    total_amount FLOAT := 0;
    product_record RECORD;
    product_quantity INTEGER;
BEGIN
    -- Проверяем, существует ли уже клиент с данным email
    SELECT id INTO customer_id FROM ishop.customer WHERE email = NEW.email;

    IF customer_id IS NULL THEN
        -- Вставляем нового клиента
        INSERT INTO ishop.customer (name, email, phone, status)
        VALUES (NEW.name, NEW.email, NEW.phone, 1)
        RETURNING id INTO customer_id;
    ELSE
        -- Обновляем существующего клиента
        UPDATE ishop.customer
        SET name = NEW.name,
            phone = NEW.phone,
            status = LEAST(status + 1, 5)
        WHERE id = customer_id
        RETURNING id INTO customer_id;
    END IF;

    -- Создаем новый заказ
    INSERT INTO ishop.orders (customer, status, ammount, date)
    VALUES (customer_id, 1, 0, CURRENT_DATE)
    RETURNING id INTO order_id;

    -- Обрабатываем товары в заявке
    FOR i IN 1..74 LOOP
        EXECUTE format('SELECT product_%s FROM ishop.application WHERE id = $1', i)
        INTO product_quantity
        USING NEW.id;

        IF product_quantity IS NOT NULL AND product_quantity > 0 THEN
            SELECT * INTO product_record FROM ishop.product WHERE id = i;
            
            -- Вставляем запись в order_product
            INSERT INTO ishop.order_product (order_id, product, quantity)
            VALUES (order_id, i, product_quantity);

            -- Обновляем общую сумму заказа
            total_amount := total_amount + (product_quantity * product_record.price);
        END IF;
    END LOOP;

    -- Обновляем сумму заказа в таблице orders
    UPDATE ishop.orders
    SET ammount = total_amount
    WHERE id = order_id;

    RETURN NEW;
END;
$function$


-- триггер, который будет вызывать эту функцию при вставке данных в таблицу application:
CREATE OR REPLACE TRIGGER trg_process_application
AFTER INSERT ON ishop.application
FOR EACH ROW
EXECUTE FUNCTION ishop.process_application();
